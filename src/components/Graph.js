import React from 'react';
import Plot from 'react-plotly.js';

// this is where stuff happens
// top most component in the hierarchy
class Graph extends React.Component {
  // this is where I can declare all my variables and do other function work to get the data I want
  constructor(props) {
    super(props);

    this.handleJsonChange = this.handleJsonChange.bind(this);
    this.getPlots = this.getPlots.bind(this);
    this.handleNewPlot = this.handleJsonChange.bind(this);



    let x_list = ['2022-02-15','2022-02-16','2022-02-17','2022-02-21','2022-02-22','2022-02-23','2022-02-24','2022-02-28','2022-03-01','2022-03-02','2022-03-03','2022-03-07','2022-03-08','2022-03-09','2022-03-10','2022-03-14','2022-03-15','2022-03-16','2022-03-17','2022-03-21','2022-03-22','2022-03-23','2022-03-24','2022-03-28','2022-03-29','2022-03-30','2022-03-31','2022-04-04','2022-04-05','2022-04-06','2022-04-07','2022-04-11','2022-04-12','2022-04-13','2022-04-14','2022-04-18','2022-04-19','2022-04-20','2022-04-21','2022-04-25','2022-04-26','2022-04-27','2022-04-28','2022-05-02','2022-05-03','2022-05-04','2022-05-05','2022-05-09','2022-05-10','2022-05-11','2022-05-12','2022-05-16','2022-05-17','2022-05-18','2022-05-19','2022-05-23','2022-05-24','2022-05-25','2022-05-26','2022-05-31','2022-06-01','2022-06-02','2022-06-06','2022-06-07','2022-06-08','2022-06-09','2022-06-13','2022-06-14','2022-06-15','2022-06-16','2022-06-20','2022-06-21','2022-06-22','2022-06-23','2022-06-27','2022-06-28','2022-06-29','2022-06-30','2022-07-05','2022-07-06','2022-07-07','2022-07-08','2022-07-11','2022-07-12','2022-07-13','2022-07-14','2022-07-18','2022-07-19','2022-07-20','2022-07-21','2022-07-25','2022-07-26','2022-07-27','2022-07-28','2022-08-01','2022-08-02','2022-08-03','2022-08-04','2022-08-08','2022-08-09','2022-08-10','2022-08-11','2022-08-15','2022-08-16','2022-08-17','2022-08-18','2022-08-22','2022-08-23','2022-08-24','2022-08-25','2022-08-29','2022-08-30','2022-08-31','2022-09-01','2022-09-06','2022-09-07','2022-09-08','2022-09-12','2022-09-13','2022-09-14','2022-09-15','2022-09-19','2022-09-20','2022-09-21','2022-09-22','2022-09-26','2022-09-27','2022-09-28','2022-09-29','2022-10-03','2022-10-05','2022-10-06','2022-10-10','2022-10-11','2022-10-12','2022-10-13','2022-10-17','2022-10-18','2022-10-19','2022-10-20','2022-10-24','2022-10-25','2022-10-26','2022-10-27','2022-10-31','2022-11-01','2022-11-02','2022-11-03','2022-11-07','2022-11-08','2022-11-09','2022-11-10','2022-11-14','2022-11-15','2022-11-16','2022-11-17','2022-11-21','2022-11-22','2022-11-23','2022-11-28','2022-11-29','2022-11-30','2022-12-01','2022-12-05','2022-12-06','2022-12-07','2022-12-08','2022-12-12','2022-12-13','2022-12-14','2022-12-15','2022-12-19','2022-12-20','2022-12-21','2022-12-22','2022-12-27','2022-12-28','2022-12-29','2023-01-03','2023-01-04','2023-01-05','2023-01-09','2023-01-10','2023-01-11','2023-01-12','2023-01-16','2023-01-17','2023-01-18','2023-01-19','2023-01-23','2023-01-24','2023-01-25','2023-01-26','2023-01-30','2023-01-31','2023-02-01','2023-02-02','2023-02-06','2023-02-07','2023-02-08','2023-02-09','2023-02-13','2023-02-14','2023-02-15','2023-02-16','2023-02-20','2023-02-21','2023-02-22','2023-02-23','2023-02-27','2023-02-28','2023-03-01','2023-03-02','2023-03-06','2023-03-07','2023-03-08','2023-03-09','2023-03-13','2023-03-14','2023-03-15','2023-03-16','2023-03-20','2023-03-21','2023-03-22','2023-03-23','2023-03-27','2023-03-28','2023-03-29','2023-03-30','2023-04-03','2023-04-04','2023-04-05','2023-04-07','2023-04-10','2023-04-11','2023-04-12','2023-04-13','2023-04-17','2023-04-18','2023-04-19','2023-04-20','2023-04-24','2023-04-25','2023-04-26','2023-04-27','2023-05-01','2023-05-02','2023-05-03','2023-05-04','2023-05-08','2023-05-09','2023-05-10','2023-05-11','2023-05-15','2023-05-16','2023-05-17','2023-05-18','2023-05-22','2023-05-23','2023-05-24','2023-05-25','2023-05-30','2023-05-31','2023-06-01','2023-06-05','2023-06-06','2023-06-07','2023-06-08','2023-06-12','2023-06-13','2023-06-14','2023-06-15','2023-06-19','2023-06-20','2023-06-21','2023-06-22','2023-06-26','2023-06-27','2023-06-28','2023-06-29','2023-07-03','2023-07-05','2023-07-06','2023-07-07','2023-07-10','2023-07-11','2023-07-12','2023-07-13','2023-07-17','2023-07-18','2023-07-19','2023-07-20','2023-07-24','2023-07-25','2023-07-26','2023-07-27','2023-07-31','2023-08-01','2023-08-02','2023-08-03','2023-08-07','2023-08-08','2023-08-09','2023-08-10','2023-08-14','2023-08-15','2023-08-16','2023-08-17','2023-08-21','2023-08-22','2023-08-23','2023-08-24','2023-08-28','2023-08-29','2023-08-30','2023-08-31','2023-09-05','2023-09-06','2023-09-07','2023-09-08','2023-09-11','2023-09-12','2023-09-13','2023-09-14','2023-09-18','2023-09-19','2023-09-20','2023-09-21','2023-09-25','2023-09-26','2023-09-27','2023-09-28','2023-10-02','2023-10-03','2023-10-04','2023-10-05','2023-10-09','2023-10-10','2023-10-11','2023-10-12','2023-10-16','2023-10-17','2023-10-18','2023-10-19','2023-10-23','2023-10-24','2023-10-25','2023-10-26','2023-10-30','2023-10-31','2023-11-01','2023-11-02','2023-11-06','2023-11-07','2023-11-08','2023-11-09','2023-11-13','2023-11-14','2023-11-15','2023-11-16','2023-11-20','2023-11-21','2023-11-22','2023-11-24','2023-11-27','2023-11-28','2023-11-29','2023-11-30','2023-12-04','2023-12-05','2023-12-06','2023-12-07','2023-12-11','2023-12-12','2023-12-13','2023-12-14','2023-12-18','2023-12-19','2023-12-20','2023-12-21','2023-12-26','2023-12-27','2023-12-28','2023-12-29','2024-01-02','2024-01-03','2024-01-04','2024-01-05','2024-01-08','2024-01-09','2024-01-10','2024-01-11','2024-01-17','2024-01-18','2024-01-19','2024-01-22','2024-01-23','2024-01-24','2024-01-25','2024-01-29','2024-01-30','2024-01-31','2024-02-01','2024-02-05','2024-02-06','2024-02-07','2024-02-08','2024-02-12','2024-02-13','2024-02-14','2024-02-15','2024-02-19','2024-02-20','2024-02-21','2024-02-22','2024-02-26','2024-02-27','2024-02-28','2024-02-29']


    let y_list = [1580.1664673240641,1837.3287902125446,1369.7253999916566,901.6226239886091,675.163447534727,700.4988372515538,557.0635243616139,403.5734152250861,372.29144763864264,283.8028561697525,225.77491124659826,167.95007225156016,117.32547532557841,80.95881984887295,55.413185354668414,42.554071295624325,36.18807235390533,38.53062509763314,28.209512368544626,27.195106936198666,22.885178446308267,15.58422046409348,19.3373105789802,14.29948334881714,178.94990773493026,136.8079269102597,104.71997348135156,109.54277299625446,88.68312939964203,73.0342574795891,84.00401043337996,63.34077757190447,495.6366473742964,374.5809105072636,1094.26397503571,845.5989235120996,869.8103427214701,674.2051572258442,1489.5744599989039,1167.4235340588928,917.6455461243773,749.3864246975077,751.7389254776872,656.9158260714398,708.9961092465937,551.1139018255899,577.9473817185353,421.54964197276956,1015.5555300700286,1075.6161823862383,1180.6420191585064,891.9138400810547,1461.235415259315,1207.0102964602256,1442.3908981934912,1330.9270864046582,1603.8408779613421,1518.6212743722963,1546.411599790649,1990.9067481472161,1725.4448763593607,3535.1776133847848,2964.0294046502845,2527.450136783195,1962.207187507617,2159.182399112861,1685.9053958483578,1385.533105437735,1063.0271330218243,842.2229186617243,7684.306693979736,9529.029527723416,7137.967583356542,5499.743897142625,6229.705633770588,5427.780030938875,4150.130286999135,3412.529734139863,2983.7238885645347,2453.74950254739,3582.9334887616724,2821.5215042804807,2272.3228682603763,37119.683872643975,28992.11203359473,22532.128282883197,21054.00261613865,16319.145889410149,12935.848174427929,18658.589963901963,14630.390113918314,11367.334635013875,8575.327783003286,7903.805524604891,6203.370572790944,4710.033058626457,3026.0956858848376,2653.085154636251,2264.7728455704755,13875.846271860348,10433.964109640627,7891.502285801827,6541.48426801348,5115.608464165155,4854.306851614411,3700.3895985515774,11678.703715803205,9467.229871760137,8288.409709837026,6323.356905736758,4857.767178286772,4093.301439059919,2787.4937114981035,3882.835518170562,3156.0966902513032,2560.912572585729,6767.873012671207,5252.824892068408,4032.222544888694,2940.4446471367182,2287.5578441394628,2079.122554241962,1645.114453015895,1293.0064086756245,1000.8759906384539,844.8752946712731,670.7197584376146,525.4913280739976,426.4088502219808,228.96110641043717,222.04572929939164,172.2350167244788,805.3883425640645,695.0172327218982,804.1867307616659,649.9500204935604,547.3987079170588,456.2346097503236,430.9254660047729,1024.8543469082533,776.1253864224091,746.1814317863272,590.2502014267031,1165.451439902283,1135.0255868557476,16985.71919504163,12965.998887595437,11020.56283830015,8662.712172570931,6547.405148058297,4940.00195806014,3733.813535138916,2809.182115648066,2128.028631954534,1727.5481196734765,1468.509705697713,1182.848983252515,2857.472989407511,2018.3858140519253,3115.019700959594,2847.9762943345795,11097.346359257364,13251.86044200365,12398.980204109183,15768.998893978398,24459.327985366846,19227.571984162856,16859.39033779429,16340.859945266084,21712.288096687444,20046.56855923486,22800.878401839283,21815.37005391031,35057.16587862015,28283.52947592899,32979.10925344869,28622.4789763225,24369.005323869063,59746.35088705932,48485.06293709327,38591.4335375129,31334.2202911154,29462.295490472923,28057.117319417746,21463.625608530998,20541.89485509643,264051.4501902524,204365.6318858783,156383.9587234846,133603.63505725283,107461.76684538579,85293.15519474172,64569.690766471824,128710.18771273852,98913.50190583881,74689.34520763246,57869.89808830136,44474.22726213092,33958.91285737715,21745.021902047265,16437.373944416217,16968.066267568538,14425.642434363897,78750.05217003044,59216.56338109059,59999.83816376388,49432.98212300697,39570.88273385944,30129.873211050606,23101.583471320813,18467.474664372603,14378.955732812115,17501.26927847388,13242.794545788021,12188.812705887594,14657.592734986774,41015.150324704366,74286.22463236001,76723.90329913051,57525.0003438105,46176.19539419809,34935.331582748615,29162.92343386856,22205.71280432367,20688.23513130955,18966.378676077707,17332.418068315754,15770.060730147714,75292.28316697438,57171.55159521479,45109.12184412146,33819.8173145488,26560.664289613665,21836.16765953364,31077.39171165675,23574.801054490254,20440.651062687186,15333.741799248826,11758.605796003618,9050.337825730787,6769.20220565398,3626.1569782882075,3005.5044300645036,2205.8747156006466,1829.5489868636882,1468.6464625684762,1108.471072241108,911.3044641224118,702.7148723610691,478.12632867554174,594.8527282045424,471.9022848283529,427.55407575582666,367.60555130305875,556.3280638166611,511.27603357989716,451.89606954994844,1553.0144927604179,1871.6755681614907,1433.5474724017326,1420.780422573171,1088.8164605020943,1688.2343371485802,1630.803617926431,1235.477262377041,1929.0780610736156,1455.7055320156205,2013.7939130076893,1582.134863842395,3077.046855136707,2293.6931831689494,1772.3456025532462,1343.0766866881502,2551.922158103178,1923.6290944961927,1473.039970195686,1148.1664364455773,898.7847043307085,664.2887816474556,506.65613378323235,361.5172328356554,490.38089608466316,324.84190796044874,321.8363285753389,241.42963467846337,245.270123106121,163.04791222757376,140.01004104204074,109.93678247190131,122.16903379453403,90.88018208879934,1360.3334296129733,1022.8103704242941,4664.1818023478145,3535.5652837606935,3100.6484900714927,2333.995044088384,2338.671923150287,1760.803140516527,46885.021037610255,35537.16226373306,29556.84285703461,22596.427964935814,17158.732265829134,12998.542652702605,9983.779772425907,7436.792749515826,6086.010329586286,4573.6388359168595,6389.782998741785,4925.523427972403,4327.690449672657,4166.145214277359,5935.18240832831,5390.714977202321,4443.213326673185,3665.218494582733,2894.8934728555037,2766.187472954785,2214.885964732152,2556.081079350011,3096.4430998227294,2310.455514834183,1936.1226988579735,1516.1997164600957,3925.3035981011053,2934.4939563874486,2535.2382270469657,3230.3968073226483,5713.742306986617,4428.777694515497,4065.673263442618,3184.730795800563,3318.3667130218146,2784.4255532903962,2350.169456928298,1822.2028329178115,2633.8819326280786,2049.0145862146383,1757.920824363035,1468.3458199041982,2537.499911962993,2013.6328632103377,1552.6830563903284,1171.2203268979981,913.2676924192741,756.9948258840295,643.4550848458387,510.2604630743046,1351.4932353767974,1018.468149955137,1178.6613706590977,1660.1141113351603,2819.168809352391,2324.68871671056,2315.3757929149565,3445.7420634788687,2621.812724468558,2251.591671779871,3242.867659673086,3012.434235835246,6041.966542679458,8985.381624910464,8767.043992796129,8326.278821079944,8548.102370577166,12623.01515940081,16537.478898351445,19504.27932253392,25165.104439697792,22468.43970843179,141652.90093781447,108842.31135183106,96505.78211618206,83567.24046996098,63744.22595602679,50545.91505167508,61915.13134627043,65383.29854110945,63629.96186187325,47983.92255495295,50408.97292286174,39231.44090884957,30078.11784717123,22114.9185322583,17031.5183222941,15012.253268101926,14654.010140954068,11484.273733854823,11627.36747818602,42369.651059860604,31973.40934497157,23649.932738038176,17769.214283860227,13127.89943353796,10824.691521343417,8206.437710886681,6601.0174637816,5057.787527516007,3931.0870159650453,3836.39048875054,3055.8400152044446,2651.893541246635,1249.0880990914447,1043.01045952683,923.3079494506857,1009.2245408929595,945.244011257461,1152.8154007106066,7503.026462549374,6128.160500379164,4931.056218378537,3967.7349983594327,3591.0588887721483,2791.88150506728,2253.1824863831057,2193.8467695558484,1782.457968911305,1715.9214313069733]

    const plotJson = {
      data: [{
        // x: [1, 2, 7, 8],
        //y: [1, 3, 2, 6],
        x: x_list,
        y: y_list,
        type: 'scatter',
        name: 'shan',
        mode: 'lines',
        hoveron: "fills+points",
        fill: "tozeroy",
        fillcolor: '#c9ebff',
        line: {
          color: '#28628e',
          width: 3,
        }
      }],
      layout: {
        yaxis: {
          title: 'Effective Wastewater Levels (Gene copies/L)',
          autotick: true,
          showgrid: true,
          automargin: true,
          font: {
            family: 'trebuchet ms,sans-serif',
            color: '#0e2d4c',
            size: 20,
          },
        },
        xaxis: {
          type: 'date',
          autorange: true,
          title: 'Date',
          showgrid: false,
          automargin: true,
          font: {
            family: 'trebuchet ms,sans-serif',
            color: '#0e2d4c',
            size: 20,
          },
          rangeselector: {
            buttons: [
              {
                count: 1,
                label: '1m',
                step: 'month',
                stepmode: 'backward'
              },
              {
                count: 6,
                label: '6m',
                step: 'month',
                stepmode: 'backward'
              },
              {
                step: 'year',
                stepmode: 'todate',
                count: 1,
                label: 'YTD'
              },
              { step: 'all' }
            ]
          },
        },
        margin: { t: 10, r: 10, l: 10, b: 20 },
        title: {
          text: 'Chicago Covid Wastewater data, 10-day weighted rolling average',
          automargin: true,
          font: {
            family: 'trebuchet ms,sans-serif',
            color: '#0e2d4c',
            size: 20,
          }
        }
      }
    }

    this.state = {
      json: plotJson,
    }
  }

  handleJsonChange = newJSON => {
    this.setState({ json: newJSON });
  }

  handleNewPlot = option => {
    // here is where I need to parse the output of getPlot into a 
    // json that we can set the set of
    // eventually
    /*
    this.setState({
      json: newJSON,
    });
    */
  }

  getPlots = (input) => {
    // here is where I need to parse the csv file in this directory
  };

  render() {

    return (
      // this is where I have my returnable html
      <div className="Graph">
        <Plot
          data={this.state.json.data}
          layout={this.state.json.layout}
          config={{ displayModeBar: false }}
        />
      </div>
    );
  }
}
export default Graph;
